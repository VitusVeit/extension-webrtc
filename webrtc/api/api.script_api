- name: webrtc
  type: table
  desc: Functions and constants for using webrtc. Supported only on web.
  members:

#*****************************************************************************************************

  - name: set_configuration
    type: function
    desc: Sets the configuration for the peer connection
    parameters:
      - name: ice_servers
        type: string
        desc: A string containg a list of stun or turn servers (eg "stun_url:PORT;turn_url:PORT:USER:PASSWORD"), a section is delimited by ';' and subdivided by ':'
        
      - name: webrtc_callback
        type: function
        desc: callback for all webrtc events
        parameters:
        - name: self
          type: object
          desc: The script instance that was used to register the callback
        
        - name: event
          type: number
          desc: The current event. One of the following

             - `webrtc.EVENT_CHANNEL_OPENED`

             - `webrtc.EVENT_CHANNEL_CLOSED`

             - `webrtc.EVENT_SIGNALING_DATA`

             - `webrtc.EVENT_MESSAGE`

        - name: data
          type: table
          desc: the event payload
          members:
            - name: id
              type: number
              desc: the id of the sender peer, not present if event is `webrtc.EVENT_SIGNALING_DATA`.
            
            - name: label
              type: string
              desc: the label of the DataChannel, not present if event is `webrtc.EVENT_SIGNALING_DATA`.
            
            - name: msg
              type: string
              desc: the message sent from the peer, only present if event is `webrtc.EVENT_MESSAGE`.
            
            - name: signaling
              type: string
              desc: the signaling data to send to the other peer, only present if event is `webrtc.EVENT_SIGNALING_DATA`.

#*****************************************************************************************************

  - name: process_data
    type: function
    desc: Processes the signaling data that was received by a peer.
    parameters:
    - name: data
      type: string
      desc: The data that needs to be processed.

#*****************************************************************************************************

  - name: create_channel
    type: function
    desc: Creates a datachannel with a specified peer and type
    parameters:
    - name: id
      type: number
      desc: The id for which the datachannel is to be created

    - name: label
      type: string
      desc: The label for the datachannel

    - name: type
      type: int
      desc: The type of the datachannel, it can be any of the TYPE_* constants

#*****************************************************************************************************

  - name: send_message
    type: function
    desc: Sends a message to a peer by a channel
    parameters:
    - name: id
      type: number
      desc: The id to which the message is to be sent

    - name: label
      type: string
      desc: The label of the channel to be used, the datachannel needs to be already created

    - name: message
      type: string
      desc: The message to send

#*****************************************************************************************************

  - name: TYPE_UNRELIABLE
    type: number
    desc: An unreliable DataChannel connection with unordered packets

  - name: TYPE_UNRELIABLE_ORDERED
    type: number
    desc: An unreliable DataChannel connection with ordered packets

  - name: TYPE_RELIABLE
    type: number
    desc: A reliable DataChannel connection with ordered packets

  - name: EVENT_CHANNEL_OPENED
    type: number
    desc: An event called when a new DataChannel is opened
  
  - name: EVENT_CHANNEL_CLOSED
    type: number
    desc: An event called when a new DataChannel is closed

  - name: EVENT_SIGNALING_DATA
    type: number
    desc: An event called when webrtc generates new signaling data

  - name: EVENT_MESSAGE
    type: number
    desc: An event called when a new message has arrived